const specialChar = {
    '&#60;': '<',
    '&#039;': "'",
    '&#34;': '"',
    '&quot;': '"',
    '&lrm;': '',
    '&38;':'&',
    '&amp;': '&',
     '&Agrave;': 'À',
     '&Aacute;': 'Á',
     '&Acirc;': 'Â',
     '&Atilde;': 'Ã',
     '&Auml;': 'Ä',
     '&Aring;': 'Å',
     '&agrave;': 'à',
     '&aacute;': 'á',
     '&acirc;': 'â',
     '&atilde;': 'ã',
     '&auml;': 'ä',
     '&aring;': 'å',
     '&AElig;': 'Æ',
     '&aelig;': 'æ',
     '&szlig;': 'ß',
     '&Ccedil;': 'Ç',
     '&ccedil;': 'ç',
     '&Egrave;': 'È',
     '&Eacute;': 'É',
     '&Ecirc;': 'Ê',
     '&Euml;': 'Ë',
     '&egrave;': 'è',
     '&eacute;': 'é',
     '&ecirc;': 'ê',
     '&euml;': 'ë',
     '&#131;': 'ƒ',
     '&Igrave;': 'Ì',
     '&Iacute;': 'Í',
     '&Icirc;': 'Î',
     '&Iuml;': 'Ï',
     '&igrave;': 'ì',
     '&iacute;': 'í',
     '&icirc;': 'î',
     '&iuml;': 'ï',
     '&Ntilde;': 'Ñ',
     '&ntilde;': 'ñ',
     '&Ograve;': 'Ò',
     '&Oacute;': 'Ó',
     '&Ocirc;': 'Ô',
     '&Otilde;': 'Õ',
     '&Ouml;': 'Ö',
     '&ograve;': 'ò',
     '&oacute;': 'ó',
     '&ocirc;': 'ô',
     '&otilde;': 'õ',
     '&ouml;': 'ö',
     '&Oslash;': 'Ø',
     '&oslash;': 'ø',
     '&#140;': 'Œ',
     '&#156;': 'œ',
     '&#138;': 'Š',
     '&#154;': 'š',
     '&Ugrave;': 'Ù',
     '&Uacute;': 'Ú',
     '&Ucirc;': 'Û',
     '&Uuml;': 'Ü',
     '&ugrave;': 'ù',
     '&uacute;': 'ú',
     '&ucirc;': 'û',
     '&uuml;': 'ü',
     '&#181;': 'µ',
     '&#215;': '×',
     '&Yacute;': 'Ý',
     '&#159;': 'Ÿ',
     '&yacute;': 'ý',
     '&yuml;': 'ÿ',
     '&#176;': '°',
     '&#134;': '†',
     '&#135;': '‡',
     '&lt;': '<',
     '&gt;': '>',
     '&#177;': '±',
     '&#171;': '«',
     '&#187;': '»',
     '&#191;': '¿',
     '&#161;': '¡',
     '&#183;': '·',
     '&#149;': '•',
     '&#153;': '™',
     '&copy;': '©',
     '&reg;': '®',
     '&#167;': '§',
     '&#182;': '¶'
}

function cleanString(string) {
    let newString
    if (string.match(/&.*?;/g)){
      string.match(/&.*?;/g).forEach((str)=>{
        const regex = new RegExp(str, 'g')
        newString = string.replace(regex, specialChar[str])
        
      })} else {
        newString = string
      }    
    return newString
  }

export {specialChar, cleanString}